// Copyright Â© 2019 A Medium Corporation.
// Licensed under the Apache License, Version 2.0; see the LICENSE file.

// Code generated by informer. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "go.medium.engineering/picchu/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Clusters returns a ClusterInformer.
	Clusters() ClusterInformer
	// Incarnations returns a IncarnationInformer.
	Incarnations() IncarnationInformer
	// Revisions returns a RevisionInformer.
	Revisions() RevisionInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Clusters returns a ClusterInformer.
func (v *version) Clusters() ClusterInformer {
	return &clusterInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Incarnations returns a IncarnationInformer.
func (v *version) Incarnations() IncarnationInformer {
	return &incarnationInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Revisions returns a RevisionInformer.
func (v *version) Revisions() RevisionInformer {
	return &revisionInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
