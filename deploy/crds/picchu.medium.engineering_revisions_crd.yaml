apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: revisions.picchu.medium.engineering
spec:
  group: picchu.medium.engineering
  names:
    categories:
    - all
    - picchu
    kind: Revision
    listKind: RevisionList
    plural: revisions
    singular: revision
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Revision is the Schema for the revisions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RevisionSpec defines the desired state of Revision
          properties:
            app:
              properties:
                image:
                  type: string
                name:
                  type: string
                ref:
                  type: string
                tag:
                  type: string
              required:
              - image
              - name
              - ref
              - tag
              type: object
            canaryWithSLIRules:
              type: boolean
            disableMirroring:
              type: boolean
            failed:
              type: boolean
            ignoreSLOs:
              type: boolean
            sentry:
              properties:
                release:
                  type: boolean
              type: object
            tagRoutingHeader:
              type: string
            targets:
              items:
                properties:
                  acceptanceTarget:
                    type: boolean
                  affinity:
                    description: Affinity is a group of affinity scheduling rules.
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  alertRules:
                    items:
                      description: Rule describes an alerting or recording rule.
                      properties:
                        alert:
                          type: string
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        expr:
                          anyOf:
                          - type: string
                          - type: integer
                        for:
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        record:
                          type: string
                      required:
                      - expr
                      type: object
                    type: array
                  aws:
                    description: 'TODO(lyra): PodTemplate'
                    properties:
                      iam:
                        properties:
                          role_arn:
                            type: string
                        type: object
                    type: object
                  canary:
                    properties:
                      percent:
                        format: int32
                        type: integer
                      ttl:
                        format: int64
                        type: integer
                    required:
                    - percent
                    - ttl
                    type: object
                  configSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  env:
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previous defined environment variables in the
                            container and any service environment variables. If a
                            variable cannot be resolved, the reference in the input
                            string will be unchanged. The $(VAR_NAME) syntax can be
                            escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                            will never be expanded, regardless of whether the variable
                            exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, metadata.labels, metadata.annotations,
                                spec.nodeName, spec.serviceAccountName, status.hostIP,
                                status.podIP.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  type: string
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  externalTest:
                    properties:
                      completed:
                        type: boolean
                      enabled:
                        type: boolean
                      lastUpdated:
                        format: date-time
                        type: string
                      started:
                        type: boolean
                      succeeded:
                        type: boolean
                      timeout:
                        type: string
                    required:
                    - completed
                    - enabled
                    - started
                    type: object
                  fleet:
                    type: string
                  istio:
                    properties:
                      trafficPolicy:
                        description: Traffic policies to apply for a specific destination,
                          across all destination ports. See DestinationRule for examples.
                        properties:
                          connection_pool:
                            description: Settings controlling the volume of connections
                              to an upstream service
                            properties:
                              http:
                                description: HTTP connection pool settings.
                                properties:
                                  h2_upgrade_policy:
                                    description: Specify if http1.1 connection should
                                      be upgraded to http2 for the associated destination.
                                    format: int32
                                    type: integer
                                  http1_max_pending_requests:
                                    description: Maximum number of pending HTTP requests
                                      to a destination. Default 2^32-1.
                                    format: int32
                                    type: integer
                                  http2_max_requests:
                                    description: Maximum number of requests to a backend.
                                      Default 2^32-1.
                                    format: int32
                                    type: integer
                                  idle_timeout:
                                    description: The idle timeout for upstream connection
                                      pool connections. The idle timeout is defined
                                      as the period in which there are no active requests.
                                      If not set, the default is 1 hour. When the
                                      idle timeout is reached the connection will
                                      be closed. Note that request based timeouts
                                      mean that HTTP/2 PINGs will not keep the connection
                                      alive. Applies to both HTTP1.1 and HTTP2 connections.
                                    properties:
                                      nanos:
                                        description: Signed fractions of a second
                                          at nanosecond resolution of the span of
                                          time. Durations less than one second are
                                          represented with a 0 `seconds` field and
                                          a positive or negative `nanos` field. For
                                          durations of one second or more, a non-zero
                                          value for the `nanos` field must be of the
                                          same sign as the `seconds` field. Must be
                                          from -999,999,999 to +999,999,999 inclusive.
                                        format: int32
                                        type: integer
                                      seconds:
                                        description: 'Signed seconds of the span of
                                          time. Must be from -315,576,000,000 to +315,576,000,000
                                          inclusive. Note: these bounds are computed
                                          from: 60 sec/min * 60 min/hr * 24 hr/day
                                          * 365.25 days/year * 10000 years'
                                        format: int64
                                        type: integer
                                    type: object
                                  max_requests_per_connection:
                                    description: Maximum number of requests per connection
                                      to a backend. Setting this parameter to 1 disables
                                      keep alive. Default 0, meaning "unlimited",
                                      up to 2^29.
                                    format: int32
                                    type: integer
                                  max_retries:
                                    description: Maximum number of retries that can
                                      be outstanding to all hosts in a cluster at
                                      a given time. Defaults to 2^32-1.
                                    format: int32
                                    type: integer
                                type: object
                              tcp:
                                description: Settings common to both HTTP and TCP
                                  upstream connections.
                                properties:
                                  connect_timeout:
                                    description: 'TCP connection timeout. format:
                                      1h/1m/1s/1ms. MUST BE >=1ms. Default is 10s.'
                                    properties:
                                      nanos:
                                        description: Signed fractions of a second
                                          at nanosecond resolution of the span of
                                          time. Durations less than one second are
                                          represented with a 0 `seconds` field and
                                          a positive or negative `nanos` field. For
                                          durations of one second or more, a non-zero
                                          value for the `nanos` field must be of the
                                          same sign as the `seconds` field. Must be
                                          from -999,999,999 to +999,999,999 inclusive.
                                        format: int32
                                        type: integer
                                      seconds:
                                        description: 'Signed seconds of the span of
                                          time. Must be from -315,576,000,000 to +315,576,000,000
                                          inclusive. Note: these bounds are computed
                                          from: 60 sec/min * 60 min/hr * 24 hr/day
                                          * 365.25 days/year * 10000 years'
                                        format: int64
                                        type: integer
                                    type: object
                                  max_connections:
                                    description: Maximum number of HTTP1 /TCP connections
                                      to a destination host. Default 2^32-1.
                                    format: int32
                                    type: integer
                                  tcp_keepalive:
                                    description: If set then set SO_KEEPALIVE on the
                                      socket to enable TCP Keepalives.
                                    properties:
                                      interval:
                                        description: The time duration between keep-alive
                                          probes. Default is to use the OS level configuration
                                          (unless overridden, Linux defaults to 75s.)
                                        properties:
                                          nanos:
                                            description: Signed fractions of a second
                                              at nanosecond resolution of the span
                                              of time. Durations less than one second
                                              are represented with a 0 `seconds` field
                                              and a positive or negative `nanos` field.
                                              For durations of one second or more,
                                              a non-zero value for the `nanos` field
                                              must be of the same sign as the `seconds`
                                              field. Must be from -999,999,999 to
                                              +999,999,999 inclusive.
                                            format: int32
                                            type: integer
                                          seconds:
                                            description: 'Signed seconds of the span
                                              of time. Must be from -315,576,000,000
                                              to +315,576,000,000 inclusive. Note:
                                              these bounds are computed from: 60 sec/min
                                              * 60 min/hr * 24 hr/day * 365.25 days/year
                                              * 10000 years'
                                            format: int64
                                            type: integer
                                        type: object
                                      probes:
                                        description: Maximum number of keepalive probes
                                          to send without response before deciding
                                          the connection is dead. Default is to use
                                          the OS level configuration (unless overridden,
                                          Linux defaults to 9.)
                                        format: int32
                                        type: integer
                                      time:
                                        description: The time duration a connection
                                          needs to be idle before keep-alive probes
                                          start being sent. Default is to use the
                                          OS level configuration (unless overridden,
                                          Linux defaults to 7200s (ie 2 hours.)
                                        properties:
                                          nanos:
                                            description: Signed fractions of a second
                                              at nanosecond resolution of the span
                                              of time. Durations less than one second
                                              are represented with a 0 `seconds` field
                                              and a positive or negative `nanos` field.
                                              For durations of one second or more,
                                              a non-zero value for the `nanos` field
                                              must be of the same sign as the `seconds`
                                              field. Must be from -999,999,999 to
                                              +999,999,999 inclusive.
                                            format: int32
                                            type: integer
                                          seconds:
                                            description: 'Signed seconds of the span
                                              of time. Must be from -315,576,000,000
                                              to +315,576,000,000 inclusive. Note:
                                              these bounds are computed from: 60 sec/min
                                              * 60 min/hr * 24 hr/day * 365.25 days/year
                                              * 10000 years'
                                            format: int64
                                            type: integer
                                        type: object
                                    type: object
                                type: object
                            type: object
                          load_balancer:
                            description: Settings controlling the load balancer algorithms.
                            properties:
                              locality_lb_setting:
                                description: Locality load balancer settings, this
                                  will override mesh wide settings in entirety, meaning
                                  no merging would be performed between this object
                                  and the object one in MeshConfig
                                properties:
                                  distribute:
                                    description: 'Optional: only one of distribute
                                      or failover can be set. Explicitly specify loadbalancing
                                      weight across different zones and geographical
                                      locations. Refer to [Locality weighted load
                                      balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
                                      If empty, the locality weight is set according
                                      to the endpoints number within it.'
                                    items:
                                      description: 'Describes how traffic originating
                                        in the ''from'' zone or sub-zone is distributed
                                        over a set of ''to'' zones. Syntax for specifying
                                        a zone is {region}/{zone}/{sub-zone} and terminal
                                        wildcards are allowed on any segment of the
                                        specification. Examples: * - matches all localities
                                        us-west/* - all zones and sub-zones within
                                        the us-west region us-west/zone-1/* - all
                                        sub-zones within us-west/zone-1'
                                      properties:
                                        from:
                                          description: Originating locality, '/' separated,
                                            e.g. 'region/zone/sub_zone'.
                                          type: string
                                        to:
                                          additionalProperties:
                                            format: int32
                                            type: integer
                                          description: Map of upstream localities
                                            to traffic distribution weights. The sum
                                            of all weights should be == 100. Any locality
                                            not assigned a weight will receive no
                                            traffic.
                                          type: object
                                      type: object
                                    type: array
                                  enabled:
                                    description: enable locality load balancing, this
                                      is DestinationRule-level and will override mesh
                                      wide settings in entirety. e.g. true means that
                                      turn on locality load balancing for this DestinationRule
                                      no matter what mesh wide settings is.
                                    properties:
                                      value:
                                        description: The bool value.
                                        type: boolean
                                    type: object
                                  failover:
                                    description: 'Optional: only failover or distribute
                                      can be set. Explicitly specify the region traffic
                                      will land on when endpoints in local region
                                      becomes unhealthy. Should be used together with
                                      OutlierDetection to detect unhealthy endpoints.
                                      Note: if no OutlierDetection specified, this
                                      will not take effect.'
                                    items:
                                      description: Specify the traffic failover policy
                                        across regions. Since zone and sub-zone failover
                                        is supported by default this only needs to
                                        be specified for regions when the operator
                                        needs to constrain traffic failover so that
                                        the default behavior of failing over to any
                                        endpoint globally does not apply. This is
                                        useful when failing over traffic across regions
                                        would not improve service health or may need
                                        to be restricted for other reasons like regulatory
                                        controls.
                                      properties:
                                        from:
                                          description: Originating region.
                                          type: string
                                        to:
                                          description: Destination region the traffic
                                            will fail over to when endpoints in the
                                            'from' region becomes unhealthy.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            type: object
                          outlier_detection:
                            description: Settings controlling eviction of unhealthy
                              hosts from the load balancing pool
                            properties:
                              base_ejection_time:
                                description: 'Minimum ejection duration. A host will
                                  remain ejected for a period equal to the product
                                  of minimum ejection duration and the number of times
                                  the host has been ejected. This technique allows
                                  the system to automatically increase the ejection
                                  period for unhealthy upstream servers. format: 1h/1m/1s/1ms.
                                  MUST BE >=1ms. Default is 30s.'
                                properties:
                                  nanos:
                                    description: Signed fractions of a second at nanosecond
                                      resolution of the span of time. Durations less
                                      than one second are represented with a 0 `seconds`
                                      field and a positive or negative `nanos` field.
                                      For durations of one second or more, a non-zero
                                      value for the `nanos` field must be of the same
                                      sign as the `seconds` field. Must be from -999,999,999
                                      to +999,999,999 inclusive.
                                    format: int32
                                    type: integer
                                  seconds:
                                    description: 'Signed seconds of the span of time.
                                      Must be from -315,576,000,000 to +315,576,000,000
                                      inclusive. Note: these bounds are computed from:
                                      60 sec/min * 60 min/hr * 24 hr/day * 365.25
                                      days/year * 10000 years'
                                    format: int64
                                    type: integer
                                type: object
                              consecutive_5xx_errors:
                                description: "Number of 5xx errors before a host is
                                  ejected from the connection pool. When the upstream
                                  host is accessed over an opaque TCP connection,
                                  connect timeouts, connection error/failure and request
                                  failure events qualify as a 5xx error. This feature
                                  defaults to 5 but can be disabled by setting the
                                  value to 0. \n Note that consecutive_gateway_errors
                                  and consecutive_5xx_errors can be used separately
                                  or together. Because the errors counted by consecutive_gateway_errors
                                  are also included in consecutive_5xx_errors, if
                                  the value of consecutive_gateway_errors is greater
                                  than or equal to the value of consecutive_5xx_errors,
                                  consecutive_gateway_errors will have no effect."
                                properties:
                                  value:
                                    description: The uint32 value.
                                    format: int32
                                    type: integer
                                type: object
                              consecutive_errors:
                                description: Number of errors before a host is ejected
                                  from the connection pool. Defaults to 5. When the
                                  upstream host is accessed over HTTP, a 502, 503,
                                  or 504 return code qualifies as an error. When the
                                  upstream host is accessed over an opaque TCP connection,
                                  connect timeouts and connection error/failure events
                                  qualify as an error. $hide_from_docs
                                format: int32
                                type: integer
                              consecutive_gateway_errors:
                                description: "Number of gateway errors before a host
                                  is ejected from the connection pool. When the upstream
                                  host is accessed over HTTP, a 502, 503, or 504 return
                                  code qualifies as a gateway error. When the upstream
                                  host is accessed over an opaque TCP connection,
                                  connect timeouts and connection error/failure events
                                  qualify as a gateway error. This feature is disabled
                                  by default or when set to the value 0. \n Note that
                                  consecutive_gateway_errors and consecutive_5xx_errors
                                  can be used separately or together. Because the
                                  errors counted by consecutive_gateway_errors are
                                  also included in consecutive_5xx_errors, if the
                                  value of consecutive_gateway_errors is greater than
                                  or equal to the value of consecutive_5xx_errors,
                                  consecutive_gateway_errors will have no effect."
                                properties:
                                  value:
                                    description: The uint32 value.
                                    format: int32
                                    type: integer
                                type: object
                              interval:
                                description: 'Time interval between ejection sweep
                                  analysis. format: 1h/1m/1s/1ms. MUST BE >=1ms. Default
                                  is 10s.'
                                properties:
                                  nanos:
                                    description: Signed fractions of a second at nanosecond
                                      resolution of the span of time. Durations less
                                      than one second are represented with a 0 `seconds`
                                      field and a positive or negative `nanos` field.
                                      For durations of one second or more, a non-zero
                                      value for the `nanos` field must be of the same
                                      sign as the `seconds` field. Must be from -999,999,999
                                      to +999,999,999 inclusive.
                                    format: int32
                                    type: integer
                                  seconds:
                                    description: 'Signed seconds of the span of time.
                                      Must be from -315,576,000,000 to +315,576,000,000
                                      inclusive. Note: these bounds are computed from:
                                      60 sec/min * 60 min/hr * 24 hr/day * 365.25
                                      days/year * 10000 years'
                                    format: int64
                                    type: integer
                                type: object
                              max_ejection_percent:
                                description: Maximum % of hosts in the load balancing
                                  pool for the upstream service that can be ejected.
                                  Defaults to 10%.
                                format: int32
                                type: integer
                              min_health_percent:
                                description: Outlier detection will be enabled as
                                  long as the associated load balancing pool has at
                                  least min_health_percent hosts in healthy mode.
                                  When the percentage of healthy hosts in the load
                                  balancing pool drops below this threshold, outlier
                                  detection will be disabled and the proxy will load
                                  balance across all hosts in the pool (healthy and
                                  unhealthy). The threshold can be disabled by setting
                                  it to 0%. The default is 0% as it's not typically
                                  applicable in k8s environments with few pods per
                                  service.
                                format: int32
                                type: integer
                            type: object
                          port_level_settings:
                            description: Traffic policies specific to individual ports.
                              Note that port level settings will override the destination-level
                              settings. Traffic settings specified at the destination-level
                              will not be inherited when overridden by port-level
                              settings, i.e. default values will be applied to fields
                              omitted in port-level traffic policies.
                            items:
                              description: Traffic policies that apply to specific
                                ports of the service
                              properties:
                                connection_pool:
                                  description: Settings controlling the volume of
                                    connections to an upstream service
                                  properties:
                                    http:
                                      description: HTTP connection pool settings.
                                      properties:
                                        h2_upgrade_policy:
                                          description: Specify if http1.1 connection
                                            should be upgraded to http2 for the associated
                                            destination.
                                          format: int32
                                          type: integer
                                        http1_max_pending_requests:
                                          description: Maximum number of pending HTTP
                                            requests to a destination. Default 2^32-1.
                                          format: int32
                                          type: integer
                                        http2_max_requests:
                                          description: Maximum number of requests
                                            to a backend. Default 2^32-1.
                                          format: int32
                                          type: integer
                                        idle_timeout:
                                          description: The idle timeout for upstream
                                            connection pool connections. The idle
                                            timeout is defined as the period in which
                                            there are no active requests. If not set,
                                            the default is 1 hour. When the idle timeout
                                            is reached the connection will be closed.
                                            Note that request based timeouts mean
                                            that HTTP/2 PINGs will not keep the connection
                                            alive. Applies to both HTTP1.1 and HTTP2
                                            connections.
                                          properties:
                                            nanos:
                                              description: Signed fractions of a second
                                                at nanosecond resolution of the span
                                                of time. Durations less than one second
                                                are represented with a 0 `seconds`
                                                field and a positive or negative `nanos`
                                                field. For durations of one second
                                                or more, a non-zero value for the
                                                `nanos` field must be of the same
                                                sign as the `seconds` field. Must
                                                be from -999,999,999 to +999,999,999
                                                inclusive.
                                              format: int32
                                              type: integer
                                            seconds:
                                              description: 'Signed seconds of the
                                                span of time. Must be from -315,576,000,000
                                                to +315,576,000,000 inclusive. Note:
                                                these bounds are computed from: 60
                                                sec/min * 60 min/hr * 24 hr/day *
                                                365.25 days/year * 10000 years'
                                              format: int64
                                              type: integer
                                          type: object
                                        max_requests_per_connection:
                                          description: Maximum number of requests
                                            per connection to a backend. Setting this
                                            parameter to 1 disables keep alive. Default
                                            0, meaning "unlimited", up to 2^29.
                                          format: int32
                                          type: integer
                                        max_retries:
                                          description: Maximum number of retries that
                                            can be outstanding to all hosts in a cluster
                                            at a given time. Defaults to 2^32-1.
                                          format: int32
                                          type: integer
                                      type: object
                                    tcp:
                                      description: Settings common to both HTTP and
                                        TCP upstream connections.
                                      properties:
                                        connect_timeout:
                                          description: 'TCP connection timeout. format:
                                            1h/1m/1s/1ms. MUST BE >=1ms. Default is
                                            10s.'
                                          properties:
                                            nanos:
                                              description: Signed fractions of a second
                                                at nanosecond resolution of the span
                                                of time. Durations less than one second
                                                are represented with a 0 `seconds`
                                                field and a positive or negative `nanos`
                                                field. For durations of one second
                                                or more, a non-zero value for the
                                                `nanos` field must be of the same
                                                sign as the `seconds` field. Must
                                                be from -999,999,999 to +999,999,999
                                                inclusive.
                                              format: int32
                                              type: integer
                                            seconds:
                                              description: 'Signed seconds of the
                                                span of time. Must be from -315,576,000,000
                                                to +315,576,000,000 inclusive. Note:
                                                these bounds are computed from: 60
                                                sec/min * 60 min/hr * 24 hr/day *
                                                365.25 days/year * 10000 years'
                                              format: int64
                                              type: integer
                                          type: object
                                        max_connections:
                                          description: Maximum number of HTTP1 /TCP
                                            connections to a destination host. Default
                                            2^32-1.
                                          format: int32
                                          type: integer
                                        tcp_keepalive:
                                          description: If set then set SO_KEEPALIVE
                                            on the socket to enable TCP Keepalives.
                                          properties:
                                            interval:
                                              description: The time duration between
                                                keep-alive probes. Default is to use
                                                the OS level configuration (unless
                                                overridden, Linux defaults to 75s.)
                                              properties:
                                                nanos:
                                                  description: Signed fractions of
                                                    a second at nanosecond resolution
                                                    of the span of time. Durations
                                                    less than one second are represented
                                                    with a 0 `seconds` field and a
                                                    positive or negative `nanos` field.
                                                    For durations of one second or
                                                    more, a non-zero value for the
                                                    `nanos` field must be of the same
                                                    sign as the `seconds` field. Must
                                                    be from -999,999,999 to +999,999,999
                                                    inclusive.
                                                  format: int32
                                                  type: integer
                                                seconds:
                                                  description: 'Signed seconds of
                                                    the span of time. Must be from
                                                    -315,576,000,000 to +315,576,000,000
                                                    inclusive. Note: these bounds
                                                    are computed from: 60 sec/min
                                                    * 60 min/hr * 24 hr/day * 365.25
                                                    days/year * 10000 years'
                                                  format: int64
                                                  type: integer
                                              type: object
                                            probes:
                                              description: Maximum number of keepalive
                                                probes to send without response before
                                                deciding the connection is dead. Default
                                                is to use the OS level configuration
                                                (unless overridden, Linux defaults
                                                to 9.)
                                              format: int32
                                              type: integer
                                            time:
                                              description: The time duration a connection
                                                needs to be idle before keep-alive
                                                probes start being sent. Default is
                                                to use the OS level configuration
                                                (unless overridden, Linux defaults
                                                to 7200s (ie 2 hours.)
                                              properties:
                                                nanos:
                                                  description: Signed fractions of
                                                    a second at nanosecond resolution
                                                    of the span of time. Durations
                                                    less than one second are represented
                                                    with a 0 `seconds` field and a
                                                    positive or negative `nanos` field.
                                                    For durations of one second or
                                                    more, a non-zero value for the
                                                    `nanos` field must be of the same
                                                    sign as the `seconds` field. Must
                                                    be from -999,999,999 to +999,999,999
                                                    inclusive.
                                                  format: int32
                                                  type: integer
                                                seconds:
                                                  description: 'Signed seconds of
                                                    the span of time. Must be from
                                                    -315,576,000,000 to +315,576,000,000
                                                    inclusive. Note: these bounds
                                                    are computed from: 60 sec/min
                                                    * 60 min/hr * 24 hr/day * 365.25
                                                    days/year * 10000 years'
                                                  format: int64
                                                  type: integer
                                              type: object
                                          type: object
                                      type: object
                                  type: object
                                load_balancer:
                                  description: Settings controlling the load balancer
                                    algorithms.
                                  properties:
                                    locality_lb_setting:
                                      description: Locality load balancer settings,
                                        this will override mesh wide settings in entirety,
                                        meaning no merging would be performed between
                                        this object and the object one in MeshConfig
                                      properties:
                                        distribute:
                                          description: 'Optional: only one of distribute
                                            or failover can be set. Explicitly specify
                                            loadbalancing weight across different
                                            zones and geographical locations. Refer
                                            to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
                                            If empty, the locality weight is set according
                                            to the endpoints number within it.'
                                          items:
                                            description: 'Describes how traffic originating
                                              in the ''from'' zone or sub-zone is
                                              distributed over a set of ''to'' zones.
                                              Syntax for specifying a zone is {region}/{zone}/{sub-zone}
                                              and terminal wildcards are allowed on
                                              any segment of the specification. Examples:
                                              * - matches all localities us-west/*
                                              - all zones and sub-zones within the
                                              us-west region us-west/zone-1/* - all
                                              sub-zones within us-west/zone-1'
                                            properties:
                                              from:
                                                description: Originating locality,
                                                  '/' separated, e.g. 'region/zone/sub_zone'.
                                                type: string
                                              to:
                                                additionalProperties:
                                                  format: int32
                                                  type: integer
                                                description: Map of upstream localities
                                                  to traffic distribution weights.
                                                  The sum of all weights should be
                                                  == 100. Any locality not assigned
                                                  a weight will receive no traffic.
                                                type: object
                                            type: object
                                          type: array
                                        enabled:
                                          description: enable locality load balancing,
                                            this is DestinationRule-level and will
                                            override mesh wide settings in entirety.
                                            e.g. true means that turn on locality
                                            load balancing for this DestinationRule
                                            no matter what mesh wide settings is.
                                          properties:
                                            value:
                                              description: The bool value.
                                              type: boolean
                                          type: object
                                        failover:
                                          description: 'Optional: only failover or
                                            distribute can be set. Explicitly specify
                                            the region traffic will land on when endpoints
                                            in local region becomes unhealthy. Should
                                            be used together with OutlierDetection
                                            to detect unhealthy endpoints. Note: if
                                            no OutlierDetection specified, this will
                                            not take effect.'
                                          items:
                                            description: Specify the traffic failover
                                              policy across regions. Since zone and
                                              sub-zone failover is supported by default
                                              this only needs to be specified for
                                              regions when the operator needs to constrain
                                              traffic failover so that the default
                                              behavior of failing over to any endpoint
                                              globally does not apply. This is useful
                                              when failing over traffic across regions
                                              would not improve service health or
                                              may need to be restricted for other
                                              reasons like regulatory controls.
                                            properties:
                                              from:
                                                description: Originating region.
                                                type: string
                                              to:
                                                description: Destination region the
                                                  traffic will fail over to when endpoints
                                                  in the 'from' region becomes unhealthy.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                outlier_detection:
                                  description: Settings controlling eviction of unhealthy
                                    hosts from the load balancing pool
                                  properties:
                                    base_ejection_time:
                                      description: 'Minimum ejection duration. A host
                                        will remain ejected for a period equal to
                                        the product of minimum ejection duration and
                                        the number of times the host has been ejected.
                                        This technique allows the system to automatically
                                        increase the ejection period for unhealthy
                                        upstream servers. format: 1h/1m/1s/1ms. MUST
                                        BE >=1ms. Default is 30s.'
                                      properties:
                                        nanos:
                                          description: Signed fractions of a second
                                            at nanosecond resolution of the span of
                                            time. Durations less than one second are
                                            represented with a 0 `seconds` field and
                                            a positive or negative `nanos` field.
                                            For durations of one second or more, a
                                            non-zero value for the `nanos` field must
                                            be of the same sign as the `seconds` field.
                                            Must be from -999,999,999 to +999,999,999
                                            inclusive.
                                          format: int32
                                          type: integer
                                        seconds:
                                          description: 'Signed seconds of the span
                                            of time. Must be from -315,576,000,000
                                            to +315,576,000,000 inclusive. Note: these
                                            bounds are computed from: 60 sec/min *
                                            60 min/hr * 24 hr/day * 365.25 days/year
                                            * 10000 years'
                                          format: int64
                                          type: integer
                                      type: object
                                    consecutive_5xx_errors:
                                      description: "Number of 5xx errors before a
                                        host is ejected from the connection pool.
                                        When the upstream host is accessed over an
                                        opaque TCP connection, connect timeouts, connection
                                        error/failure and request failure events qualify
                                        as a 5xx error. This feature defaults to 5
                                        but can be disabled by setting the value to
                                        0. \n Note that consecutive_gateway_errors
                                        and consecutive_5xx_errors can be used separately
                                        or together. Because the errors counted by
                                        consecutive_gateway_errors are also included
                                        in consecutive_5xx_errors, if the value of
                                        consecutive_gateway_errors is greater than
                                        or equal to the value of consecutive_5xx_errors,
                                        consecutive_gateway_errors will have no effect."
                                      properties:
                                        value:
                                          description: The uint32 value.
                                          format: int32
                                          type: integer
                                      type: object
                                    consecutive_errors:
                                      description: Number of errors before a host
                                        is ejected from the connection pool. Defaults
                                        to 5. When the upstream host is accessed over
                                        HTTP, a 502, 503, or 504 return code qualifies
                                        as an error. When the upstream host is accessed
                                        over an opaque TCP connection, connect timeouts
                                        and connection error/failure events qualify
                                        as an error. $hide_from_docs
                                      format: int32
                                      type: integer
                                    consecutive_gateway_errors:
                                      description: "Number of gateway errors before
                                        a host is ejected from the connection pool.
                                        When the upstream host is accessed over HTTP,
                                        a 502, 503, or 504 return code qualifies as
                                        a gateway error. When the upstream host is
                                        accessed over an opaque TCP connection, connect
                                        timeouts and connection error/failure events
                                        qualify as a gateway error. This feature is
                                        disabled by default or when set to the value
                                        0. \n Note that consecutive_gateway_errors
                                        and consecutive_5xx_errors can be used separately
                                        or together. Because the errors counted by
                                        consecutive_gateway_errors are also included
                                        in consecutive_5xx_errors, if the value of
                                        consecutive_gateway_errors is greater than
                                        or equal to the value of consecutive_5xx_errors,
                                        consecutive_gateway_errors will have no effect."
                                      properties:
                                        value:
                                          description: The uint32 value.
                                          format: int32
                                          type: integer
                                      type: object
                                    interval:
                                      description: 'Time interval between ejection
                                        sweep analysis. format: 1h/1m/1s/1ms. MUST
                                        BE >=1ms. Default is 10s.'
                                      properties:
                                        nanos:
                                          description: Signed fractions of a second
                                            at nanosecond resolution of the span of
                                            time. Durations less than one second are
                                            represented with a 0 `seconds` field and
                                            a positive or negative `nanos` field.
                                            For durations of one second or more, a
                                            non-zero value for the `nanos` field must
                                            be of the same sign as the `seconds` field.
                                            Must be from -999,999,999 to +999,999,999
                                            inclusive.
                                          format: int32
                                          type: integer
                                        seconds:
                                          description: 'Signed seconds of the span
                                            of time. Must be from -315,576,000,000
                                            to +315,576,000,000 inclusive. Note: these
                                            bounds are computed from: 60 sec/min *
                                            60 min/hr * 24 hr/day * 365.25 days/year
                                            * 10000 years'
                                          format: int64
                                          type: integer
                                      type: object
                                    max_ejection_percent:
                                      description: Maximum % of hosts in the load
                                        balancing pool for the upstream service that
                                        can be ejected. Defaults to 10%.
                                      format: int32
                                      type: integer
                                    min_health_percent:
                                      description: Outlier detection will be enabled
                                        as long as the associated load balancing pool
                                        has at least min_health_percent hosts in healthy
                                        mode. When the percentage of healthy hosts
                                        in the load balancing pool drops below this
                                        threshold, outlier detection will be disabled
                                        and the proxy will load balance across all
                                        hosts in the pool (healthy and unhealthy).
                                        The threshold can be disabled by setting it
                                        to 0%. The default is 0% as it's not typically
                                        applicable in k8s environments with few pods
                                        per service.
                                      format: int32
                                      type: integer
                                  type: object
                                port:
                                  description: Specifies the number of a port on the
                                    destination service on which this policy is being
                                    applied.
                                  properties:
                                    number:
                                      description: Valid port number
                                      format: int32
                                      type: integer
                                  type: object
                                tls:
                                  description: TLS related settings for connections
                                    to the upstream service.
                                  properties:
                                    ca_certificates:
                                      description: 'OPTIONAL: The path to the file
                                        containing certificate authority certificates
                                        to use in verifying a presented server certificate.
                                        If omitted, the proxy will not verify the
                                        server''s certificate. Should be empty if
                                        mode is `ISTIO_MUTUAL`.'
                                      type: string
                                    client_certificate:
                                      description: REQUIRED if mode is `MUTUAL`. The
                                        path to the file holding the client-side TLS
                                        certificate to use. Should be empty if mode
                                        is `ISTIO_MUTUAL`.
                                      type: string
                                    mode:
                                      description: Indicates whether connections to
                                        this port should be secured using TLS. The
                                        value of this field determines how TLS is
                                        enforced.
                                      format: int32
                                      type: integer
                                    private_key:
                                      description: REQUIRED if mode is `MUTUAL`. The
                                        path to the file holding the client's private
                                        key. Should be empty if mode is `ISTIO_MUTUAL`.
                                      type: string
                                    sni:
                                      description: SNI string to present to the server
                                        during TLS handshake.
                                      type: string
                                    subject_alt_names:
                                      description: A list of alternate names to verify
                                        the subject identity in the certificate. If
                                        specified, the proxy will verify that the
                                        server certificate's subject alt name matches
                                        one of the specified values. If specified,
                                        this list overrides the value of subject_alt_names
                                        from the ServiceEntry.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                            type: array
                          tls:
                            description: TLS related settings for connections to the
                              upstream service.
                            properties:
                              ca_certificates:
                                description: 'OPTIONAL: The path to the file containing
                                  certificate authority certificates to use in verifying
                                  a presented server certificate. If omitted, the
                                  proxy will not verify the server''s certificate.
                                  Should be empty if mode is `ISTIO_MUTUAL`.'
                                type: string
                              client_certificate:
                                description: REQUIRED if mode is `MUTUAL`. The path
                                  to the file holding the client-side TLS certificate
                                  to use. Should be empty if mode is `ISTIO_MUTUAL`.
                                type: string
                              mode:
                                description: Indicates whether connections to this
                                  port should be secured using TLS. The value of this
                                  field determines how TLS is enforced.
                                format: int32
                                type: integer
                              private_key:
                                description: REQUIRED if mode is `MUTUAL`. The path
                                  to the file holding the client's private key. Should
                                  be empty if mode is `ISTIO_MUTUAL`.
                                type: string
                              sni:
                                description: SNI string to present to the server during
                                  TLS handshake.
                                type: string
                              subject_alt_names:
                                description: A list of alternate names to verify the
                                  subject identity in the certificate. If specified,
                                  the proxy will verify that the server certificate's
                                  subject alt name matches one of the specified values.
                                  If specified, this list overrides the value of subject_alt_names
                                  from the ServiceEntry.
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                    type: object
                  livenessProbe:
                    description: Probe describes a health check to be performed against
                      a container to determine whether it is alive or ready to receive
                      traffic.
                    properties:
                      exec:
                        description: One and only one of the following should be specified.
                          Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: 'TCPSocket specifies an action involving a TCP
                          port. TCP hooks not yet supported TODO: implement a realistic
                          TCP lifecycle hook'
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                        required:
                        - port
                        type: object
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  name:
                    type: string
                  podAnnotations:
                    additionalProperties:
                      type: string
                    type: object
                  ports:
                    items:
                      properties:
                        containerPort:
                          format: int32
                          type: integer
                        hosts:
                          items:
                            type: string
                          type: array
                        ingressPort:
                          format: int32
                          type: integer
                        istio:
                          properties:
                            http:
                              properties:
                                retries:
                                  properties:
                                    attempts:
                                      format: int32
                                      type: integer
                                    perTryTimeout:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        mode:
                          type: string
                        name:
                          type: string
                        port:
                          format: int32
                          type: integer
                        protocol:
                          description: Protocol defines network protocols supported
                            for things like container ports.
                          type: string
                      required:
                      - mode
                      - name
                      type: object
                    type: array
                  readinessProbe:
                    description: Probe describes a health check to be performed against
                      a container to determine whether it is alive or ready to receive
                      traffic.
                    properties:
                      exec:
                        description: One and only one of the following should be specified.
                          Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: 'TCPSocket specifies an action involving a TCP
                          port. TCP hooks not yet supported TODO: implement a realistic
                          TCP lifecycle hook'
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                        required:
                        - port
                        type: object
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  release:
                    properties:
                      eligible:
                        type: boolean
                      max:
                        format: int32
                        type: integer
                      rate:
                        properties:
                          delay:
                            format: int64
                            type: integer
                          increment:
                            format: int32
                            type: integer
                        type: object
                      schedule:
                        type: string
                      ttl:
                        format: int64
                        type: integer
                    type: object
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        additionalProperties:
                          type: string
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          type: string
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  scale:
                    properties:
                      default:
                        format: int32
                        type: integer
                      max:
                        format: int32
                        type: integer
                      min:
                        format: int32
                        type: integer
                      minReadySeconds:
                        format: int32
                        type: integer
                      requestsRateMetric:
                        type: string
                      targetCPUUtilizationPercentage:
                        format: int32
                        type: integer
                      targetRequestsRate:
                        type: string
                    type: object
                  serviceAccountName:
                    type: string
                  serviceLevelObjectiveLabels:
                    properties:
                      alertLabels:
                        additionalProperties:
                          type: string
                        type: object
                      ruleLabels:
                        additionalProperties:
                          type: string
                        type: object
                      serviceLevelLabels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  serviceLevelObjectives:
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        description:
                          type: string
                        enabled:
                          type: boolean
                        name:
                          type: string
                        objectivePercent: {}
                        serviceLevelIndicator:
                          properties:
                            alertAfter:
                              type: string
                            canary:
                              properties:
                                allowancePercent: {}
                                enabled:
                                  type: boolean
                                failAfter:
                                  type: string
                              required:
                              - enabled
                              type: object
                            errorQuery:
                              type: string
                            tagKey:
                              type: string
                            totalQuery:
                              type: string
                          type: object
                        serviceLevelObjectiveLabels:
                          properties:
                            alertLabels:
                              additionalProperties:
                                type: string
                              type: object
                            ruleLabels:
                              additionalProperties:
                                type: string
                              type: object
                            serviceLevelLabels:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                      required:
                      - enabled
                      type: object
                    type: array
                  serviceMonitors:
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        sloRegex:
                          description: if true, and the Spec.Endpoints.MetricRelabelConfigs
                            does not specify a regex, will replace the regex with
                            a list of SLO metric names
                          type: boolean
                        spec:
                          description: ServiceMonitorSpec contains specification parameters
                            for a ServiceMonitor.
                          properties:
                            endpoints:
                              description: A list of endpoints allowed as part of
                                this ServiceMonitor.
                              items:
                                description: Endpoint defines a scrapeable endpoint
                                  serving Prometheus metrics.
                                properties:
                                  basicAuth:
                                    description: 'BasicAuth allow an endpoint to authenticate
                                      over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                                    properties:
                                      password:
                                        description: The secret in the service monitor
                                          namespace that contains the password for
                                          authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      username:
                                        description: The secret in the service monitor
                                          namespace that contains the username for
                                          authentication.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                  bearerTokenFile:
                                    description: File to read bearer token for scraping
                                      targets.
                                    type: string
                                  bearerTokenSecret:
                                    description: Secret to mount to read bearer token
                                      for scraping targets. The secret needs to be
                                      in the same namespace as the service monitor
                                      and accessible by the Prometheus Operator.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  honorLabels:
                                    description: HonorLabels chooses the metric's
                                      labels on collisions with target labels.
                                    type: boolean
                                  honorTimestamps:
                                    description: HonorTimestamps controls whether
                                      Prometheus respects the timestamps present in
                                      scraped data.
                                    type: boolean
                                  interval:
                                    description: Interval at which metrics should
                                      be scraped
                                    type: string
                                  metricRelabelings:
                                    description: MetricRelabelConfigs to apply to
                                      samples before ingestion.
                                    items:
                                      description: 'RelabelConfig allows dynamic rewriting
                                        of the label set, being applied to samples
                                        before ingestion. It defines `<metric_relabel_configs>`-section
                                        of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                                      properties:
                                        action:
                                          description: Action to perform based on
                                            regex matching. Default is 'replace'
                                          type: string
                                        modulus:
                                          description: Modulus to take of the hash
                                            of the source label values.
                                          format: int64
                                          type: integer
                                        regex:
                                          description: Regular expression against
                                            which the extracted value is matched.
                                            defailt is '(.*)'
                                          type: string
                                        replacement:
                                          description: Replacement value against which
                                            a regex replace is performed if the regular
                                            expression matches. Regex capture groups
                                            are available. Default is '$1'
                                          type: string
                                        separator:
                                          description: Separator placed between concatenated
                                            source label values. default is ';'.
                                          type: string
                                        sourceLabels:
                                          description: The source labels select values
                                            from existing labels. Their content is
                                            concatenated using the configured separator
                                            and matched against the configured regular
                                            expression for the replace, keep, and
                                            drop actions.
                                          items:
                                            type: string
                                          type: array
                                        targetLabel:
                                          description: Label to which the resulting
                                            value is written in a replace action.
                                            It is mandatory for replace actions. Regex
                                            capture groups are available.
                                          type: string
                                      type: object
                                    type: array
                                  params:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Optional HTTP URL parameters
                                    type: object
                                  path:
                                    description: HTTP path to scrape for metrics.
                                    type: string
                                  port:
                                    description: Name of the service port this endpoint
                                      refers to. Mutually exclusive with targetPort.
                                    type: string
                                  proxyUrl:
                                    description: ProxyURL eg http://proxyserver:2195
                                      Directs scrapes to proxy through this endpoint.
                                    type: string
                                  relabelings:
                                    description: 'RelabelConfigs to apply to samples
                                      before scraping. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                                    items:
                                      description: 'RelabelConfig allows dynamic rewriting
                                        of the label set, being applied to samples
                                        before ingestion. It defines `<metric_relabel_configs>`-section
                                        of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                                      properties:
                                        action:
                                          description: Action to perform based on
                                            regex matching. Default is 'replace'
                                          type: string
                                        modulus:
                                          description: Modulus to take of the hash
                                            of the source label values.
                                          format: int64
                                          type: integer
                                        regex:
                                          description: Regular expression against
                                            which the extracted value is matched.
                                            defailt is '(.*)'
                                          type: string
                                        replacement:
                                          description: Replacement value against which
                                            a regex replace is performed if the regular
                                            expression matches. Regex capture groups
                                            are available. Default is '$1'
                                          type: string
                                        separator:
                                          description: Separator placed between concatenated
                                            source label values. default is ';'.
                                          type: string
                                        sourceLabels:
                                          description: The source labels select values
                                            from existing labels. Their content is
                                            concatenated using the configured separator
                                            and matched against the configured regular
                                            expression for the replace, keep, and
                                            drop actions.
                                          items:
                                            type: string
                                          type: array
                                        targetLabel:
                                          description: Label to which the resulting
                                            value is written in a replace action.
                                            It is mandatory for replace actions. Regex
                                            capture groups are available.
                                          type: string
                                      type: object
                                    type: array
                                  scheme:
                                    description: HTTP scheme to use for scraping.
                                    type: string
                                  scrapeTimeout:
                                    description: Timeout after which the scrape is
                                      ended
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: string
                                    - type: integer
                                    description: Name or number of the target port
                                      of the endpoint. Mutually exclusive with port.
                                  tlsConfig:
                                    description: TLS configuration to use when scraping
                                      the endpoint
                                    properties:
                                      ca:
                                        description: Stuct containing the CA cert
                                          to use for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data
                                              to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to
                                              use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      caFile:
                                        description: Path to the CA cert in the Prometheus
                                          container to use for the targets.
                                        type: string
                                      cert:
                                        description: Struct containing the client
                                          cert file for the targets.
                                        properties:
                                          configMap:
                                            description: ConfigMap containing data
                                              to use for the targets.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          secret:
                                            description: Secret containing data to
                                              use for the targets.
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                      certFile:
                                        description: Path to the client cert file
                                          in the Prometheus container for the targets.
                                        type: string
                                      insecureSkipVerify:
                                        description: Disable target certificate validation.
                                        type: boolean
                                      keyFile:
                                        description: Path to the client key file in
                                          the Prometheus container for the targets.
                                        type: string
                                      keySecret:
                                        description: Secret containing the client
                                          key file for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      serverName:
                                        description: Used to verify the hostname for
                                          the targets.
                                        type: string
                                    type: object
                                type: object
                              type: array
                            jobLabel:
                              description: The label to use to retrieve the job name
                                from.
                              type: string
                            namespaceSelector:
                              description: Selector to select which namespaces the
                                Endpoints objects are discovered from.
                              properties:
                                any:
                                  description: Boolean describing whether all namespaces
                                    are selected in contrast to a list restricting
                                    them.
                                  type: boolean
                                matchNames:
                                  description: List of namespace names.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            podTargetLabels:
                              description: PodTargetLabels transfers labels on the
                                Kubernetes Pod onto the target.
                              items:
                                type: string
                              type: array
                            sampleLimit:
                              description: SampleLimit defines per-scrape limit on
                                number of scraped samples that will be accepted.
                              format: int64
                              type: integer
                            selector:
                              description: Selector to select Endpoints objects.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            targetLabels:
                              description: TargetLabels transfers labels on the Kubernetes
                                Service onto the target.
                              items:
                                type: string
                              type: array
                          required:
                          - endpoints
                          - selector
                          type: object
                      required:
                      - name
                      - sloRegex
                      type: object
                    type: array
                  tolerations:
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                required:
                - fleet
                - name
                - scale
                type: object
              type: array
          required:
          - app
          - failed
          - targets
          type: object
        status:
          properties:
            sentry:
              properties:
                release:
                  type: boolean
              type: object
            targets:
              items:
                description: RevisionStatus defines the observed state of Revision
                properties:
                  name:
                    type: string
                  release:
                    properties:
                      currentPercent:
                        format: int32
                        type: integer
                      peakPercent:
                        format: int32
                        type: integer
                    required:
                    - currentPercent
                    - peakPercent
                    type: object
                  scale:
                    properties:
                      current:
                        format: int32
                        type: integer
                      desired:
                        format: int32
                        type: integer
                      peak:
                        format: int32
                        type: integer
                    required:
                    - current
                    - desired
                    - peak
                    type: object
                required:
                - name
                - release
                - scale
                type: object
              type: array
          required:
          - sentry
          - targets
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
