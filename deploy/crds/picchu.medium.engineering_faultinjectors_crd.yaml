
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: faultinjectors.picchu.medium.engineering
spec:
  group: picchu.medium.engineering
  names:
    kind: FaultInjector
    listKind: FaultInjectorList
    plural: faultinjectors
    singular: faultinjector
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: FaultInjector is the Schema for the faultinjectors API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FaultInjectorSpec defines the desired state of FaultInjector
          properties:
            httpPortFaults:
              items:
                description: HTTPPortFault allows injecting faults into apps by port
                  number
                properties:
                  fault:
                    description: "HTTPFaultInjection can be used to specify one or
                      more faults to inject while forwarding HTTP requests to the
                      destination specified in a route. Fault specification is part
                      of a VirtualService rule. Faults include aborting the Http request
                      from downstream service, and/or delaying proxying of requests.
                      A fault rule MUST HAVE delay or abort or both. \n *Note:* Delay
                      and abort faults are independent of one another, even if both
                      are specified simultaneously."
                    properties:
                      abort:
                        description: Abort Http request attempts and return error
                          codes back to downstream service, giving the impression
                          that the upstream service is faulty.
                        properties:
                          percentage:
                            description: Percentage of requests to be aborted with
                              the error code provided.
                            properties:
                              value:
                                type: number
                            type: object
                        type: object
                      delay:
                        description: Delay requests before forwarding, emulating various
                          failures such as network issues, overloaded upstream service,
                          etc.
                        properties:
                          percent:
                            description: Percentage of requests on which the delay
                              will be injected (0-100). Use of integer `percent` value
                              is deprecated. Use the double `percentage` field instead.
                            format: int32
                            type: integer
                          percentage:
                            description: Percentage of requests on which the delay
                              will be injected.
                            properties:
                              value:
                                type: number
                            type: object
                        type: object
                    type: object
                  portSelector:
                    description: PortSelector specifies the number of a port to be
                      used for matching or selection for final routing.
                    properties:
                      number:
                        description: Valid port number
                        format: int32
                        type: integer
                    type: object
                type: object
              type: array
          required:
          - httpPortFaults
          type: object
        status:
          description: FaultInjectorStatus defines the observed state of FaultInjector
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
