---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: faultinjectors.picchu.medium.engineering.picchu.medium.engineering
spec:
  group: picchu.medium.engineering.picchu.medium.engineering
  names:
    kind: FaultInjector
    listKind: FaultInjectorList
    plural: faultinjectors
    singular: faultinjector
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FaultInjector is the Schema for the faultinjectors API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FaultInjectorSpec defines the desired state of FaultInjector
            properties:
              httpPortFaults:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                items:
                  description: HTTPPortFault allows injecting faults into apps by
                    port number
                  properties:
                    fault:
                      description: "HTTPFaultInjection can be used to specify one
                        or more faults to inject while forwarding HTTP requests to
                        the destination specified in a route. Fault specification
                        is part of a VirtualService rule. Faults include aborting
                        the Http request from downstream service, and/or delaying
                        proxying of requests. A fault rule MUST HAVE delay or abort
                        or both. \n *Note:* Delay and abort faults are independent
                        of one another, even if both are specified simultaneously."
                      properties:
                        abort:
                          description: Abort Http request attempts and return error
                            codes back to downstream service, giving the impression
                            that the upstream service is faulty.
                          properties:
                            percentage:
                              description: Percentage of requests to be aborted with
                                the error code provided. If not specified, no request
                                will be aborted.
                              properties:
                                value: {}
                              type: object
                          type: object
                        delay:
                          description: Delay requests before forwarding, emulating
                            various failures such as network issues, overloaded upstream
                            service, etc.
                          properties:
                            percent:
                              description: "Percentage of requests on which the delay
                                will be injected (0-100). Use of integer `percent`
                                value is deprecated. Use the double `percentage` field
                                instead. \n Deprecated: Do not use."
                              format: int32
                              type: integer
                            percentage:
                              description: Percentage of requests on which the delay
                                will be injected. If left unspecified, no request
                                will be delayed.
                              properties:
                                value: {}
                              type: object
                          type: object
                      type: object
                    portSelector:
                      description: PortSelector specifies the number of a port to
                        be used for matching or selection for final routing.
                      properties:
                        number:
                          description: Valid port number
                          format: int32
                          type: integer
                      type: object
                  type: object
                type: array
            required:
            - httpPortFaults
            type: object
          status:
            description: FaultInjectorStatus defines the observed state of FaultInjector
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
