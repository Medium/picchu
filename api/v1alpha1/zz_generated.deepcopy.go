//go:build !ignore_autogenerated

/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	kedav1alpha1 "github.com/kedacore/keda/v2/apis/keda/v1alpha1"
	monitoringv1 "github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1"
	corev1 "k8s.io/api/core/v1"
	policyv1 "k8s.io/api/policy/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSInfo) DeepCopyInto(out *AWSInfo) {
	*out = *in
	out.IAM = in.IAM
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSInfo.
func (in *AWSInfo) DeepCopy() *AWSInfo {
	if in == nil {
		return nil
	}
	out := new(AWSInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertMeta) DeepCopyInto(out *AlertMeta) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertMeta.
func (in *AlertMeta) DeepCopy() *AlertMeta {
	if in == nil {
		return nil
	}
	out := new(AlertMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Alerting) DeepCopyInto(out *Alerting) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.PageAlert.DeepCopyInto(&out.PageAlert)
	in.TicketAlert.DeepCopyInto(&out.TicketAlert)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Alerting.
func (in *Alerting) DeepCopy() *Alerting {
	if in == nil {
		return nil
	}
	out := new(Alerting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Canary) DeepCopyInto(out *Canary) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Canary.
func (in *Canary) DeepCopy() *Canary {
	if in == nil {
		return nil
	}
	out := new(Canary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfig) DeepCopyInto(out *ClusterConfig) {
	*out = *in
	if in.CertificateAuthorityData != nil {
		in, out := &in.CertificateAuthorityData, &out.CertificateAuthorityData
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfig.
func (in *ClusterConfig) DeepCopy() *ClusterConfig {
	if in == nil {
		return nil
	}
	out := new(ClusterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterIngresses) DeepCopyInto(out *ClusterIngresses) {
	*out = *in
	in.Public.DeepCopyInto(&out.Public)
	in.Private.DeepCopyInto(&out.Private)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterIngresses.
func (in *ClusterIngresses) DeepCopy() *ClusterIngresses {
	if in == nil {
		return nil
	}
	out := new(ClusterIngresses)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterKubernetesStatus) DeepCopyInto(out *ClusterKubernetesStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterKubernetesStatus.
func (in *ClusterKubernetesStatus) DeepCopy() *ClusterKubernetesStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterKubernetesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSecretSource) DeepCopyInto(out *ClusterSecretSource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSecretSource.
func (in *ClusterSecretSource) DeepCopy() *ClusterSecretSource {
	if in == nil {
		return nil
	}
	out := new(ClusterSecretSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSecretTarget) DeepCopyInto(out *ClusterSecretTarget) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSecretTarget.
func (in *ClusterSecretTarget) DeepCopy() *ClusterSecretTarget {
	if in == nil {
		return nil
	}
	out := new(ClusterSecretTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSecrets) DeepCopyInto(out *ClusterSecrets) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSecrets.
func (in *ClusterSecrets) DeepCopy() *ClusterSecrets {
	if in == nil {
		return nil
	}
	out := new(ClusterSecrets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterSecrets) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSecretsList) DeepCopyInto(out *ClusterSecretsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterSecrets, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSecretsList.
func (in *ClusterSecretsList) DeepCopy() *ClusterSecretsList {
	if in == nil {
		return nil
	}
	out := new(ClusterSecretsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterSecretsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSecretsSpec) DeepCopyInto(out *ClusterSecretsSpec) {
	*out = *in
	out.Source = in.Source
	in.Target.DeepCopyInto(&out.Target)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSecretsSpec.
func (in *ClusterSecretsSpec) DeepCopy() *ClusterSecretsSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSecretsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSecretsStatus) DeepCopyInto(out *ClusterSecretsStatus) {
	*out = *in
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSecretsStatus.
func (in *ClusterSecretsStatus) DeepCopy() *ClusterSecretsStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterSecretsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(ClusterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ScalingFactorString != nil {
		in, out := &in.ScalingFactorString, &out.ScalingFactorString
		*out = new(string)
		**out = **in
	}
	in.Ingresses.DeepCopyInto(&out.Ingresses)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	out.Kubernetes = in.Kubernetes
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSelector) DeepCopyInto(out *ConfigSelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSelector.
func (in *ConfigSelector) DeepCopy() *ConfigSelector {
	if in == nil {
		return nil
	}
	out := new(ConfigSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatadogSLO) DeepCopyInto(out *DatadogSLO) {
	*out = *in
	out.Query = in.Query
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.Canary = in.Canary
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatadogSLO.
func (in *DatadogSLO) DeepCopy() *DatadogSLO {
	if in == nil {
		return nil
	}
	out := new(DatadogSLO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatadogSLOCanaryConfig) DeepCopyInto(out *DatadogSLOCanaryConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatadogSLOCanaryConfig.
func (in *DatadogSLOCanaryConfig) DeepCopy() *DatadogSLOCanaryConfig {
	if in == nil {
		return nil
	}
	out := new(DatadogSLOCanaryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatadogSLOQuery) DeepCopyInto(out *DatadogSLOQuery) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatadogSLOQuery.
func (in *DatadogSLOQuery) DeepCopy() *DatadogSLOQuery {
	if in == nil {
		return nil
	}
	out := new(DatadogSLOQuery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalTest) DeepCopyInto(out *ExternalTest) {
	*out = *in
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(v1.Duration)
		**out = **in
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalTest.
func (in *ExternalTest) DeepCopy() *ExternalTest {
	if in == nil {
		return nil
	}
	out := new(ExternalTest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjector) DeepCopyInto(out *FaultInjector) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjector.
func (in *FaultInjector) DeepCopy() *FaultInjector {
	if in == nil {
		return nil
	}
	out := new(FaultInjector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FaultInjector) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectorList) DeepCopyInto(out *FaultInjectorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FaultInjector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectorList.
func (in *FaultInjectorList) DeepCopy() *FaultInjectorList {
	if in == nil {
		return nil
	}
	out := new(FaultInjectorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FaultInjectorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectorSpec) DeepCopyInto(out *FaultInjectorSpec) {
	*out = *in
	if in.HTTPPortFaults != nil {
		in, out := &in.HTTPPortFaults, &out.HTTPPortFaults
		*out = make([]HTTPPortFault, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectorSpec.
func (in *FaultInjectorSpec) DeepCopy() *FaultInjectorSpec {
	if in == nil {
		return nil
	}
	out := new(FaultInjectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectorStatus) DeepCopyInto(out *FaultInjectorStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectorStatus.
func (in *FaultInjectorStatus) DeepCopy() *FaultInjectorStatus {
	if in == nil {
		return nil
	}
	out := new(FaultInjectorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeometricScaling) DeepCopyInto(out *GeometricScaling) {
	*out = *in
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeometricScaling.
func (in *GeometricScaling) DeepCopy() *GeometricScaling {
	if in == nil {
		return nil
	}
	out := new(GeometricScaling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPPortFault) DeepCopyInto(out *HTTPPortFault) {
	*out = *in
	if in.PortSelector != nil {
		in, out := &in.PortSelector, &out.PortSelector
		*out = (*in).DeepCopy()
	}
	if in.HTTPFault != nil {
		in, out := &in.HTTPFault, &out.HTTPFault
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPPortFault.
func (in *HTTPPortFault) DeepCopy() *HTTPPortFault {
	if in == nil {
		return nil
	}
	out := new(HTTPPortFault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInfo) DeepCopyInto(out *IAMInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInfo.
func (in *IAMInfo) DeepCopy() *IAMInfo {
	if in == nil {
		return nil
	}
	out := new(IAMInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressInfo) DeepCopyInto(out *IngressInfo) {
	*out = *in
	if in.DefaultDomains != nil {
		in, out := &in.DefaultDomains, &out.DefaultDomains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressInfo.
func (in *IngressInfo) DeepCopy() *IngressInfo {
	if in == nil {
		return nil
	}
	out := new(IngressInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Istio) DeepCopyInto(out *Istio) {
	*out = *in
	if in.TrafficPolicy != nil {
		in, out := &in.TrafficPolicy, &out.TrafficPolicy
		*out = (*in).DeepCopy()
	}
	if in.Sidecar != nil {
		in, out := &in.Sidecar, &out.Sidecar
		*out = new(IstioSidecar)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Istio.
func (in *Istio) DeepCopy() *Istio {
	if in == nil {
		return nil
	}
	out := new(Istio)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioHTTPPortConfig) DeepCopyInto(out *IstioHTTPPortConfig) {
	*out = *in
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(Retries)
		(*in).DeepCopyInto(*out)
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioHTTPPortConfig.
func (in *IstioHTTPPortConfig) DeepCopy() *IstioHTTPPortConfig {
	if in == nil {
		return nil
	}
	out := new(IstioHTTPPortConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioPortConfig) DeepCopyInto(out *IstioPortConfig) {
	*out = *in
	in.HTTP.DeepCopyInto(&out.HTTP)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioPortConfig.
func (in *IstioPortConfig) DeepCopy() *IstioPortConfig {
	if in == nil {
		return nil
	}
	out := new(IstioPortConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioSidecar) DeepCopyInto(out *IstioSidecar) {
	*out = *in
	if in.EgressHosts != nil {
		in, out := &in.EgressHosts, &out.EgressHosts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioSidecar.
func (in *IstioSidecar) DeepCopy() *IstioSidecar {
	if in == nil {
		return nil
	}
	out := new(IstioSidecar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KedaScaleInfo) DeepCopyInto(out *KedaScaleInfo) {
	*out = *in
	if in.CooldownPeriod != nil {
		in, out := &in.CooldownPeriod, &out.CooldownPeriod
		*out = new(int32)
		**out = **in
	}
	if in.IdleReplicaCount != nil {
		in, out := &in.IdleReplicaCount, &out.IdleReplicaCount
		*out = new(int32)
		**out = **in
	}
	if in.MinReplicaCount != nil {
		in, out := &in.MinReplicaCount, &out.MinReplicaCount
		*out = new(int32)
		**out = **in
	}
	if in.MaxReplicaCount != nil {
		in, out := &in.MaxReplicaCount, &out.MaxReplicaCount
		*out = new(int32)
		**out = **in
	}
	if in.Advanced != nil {
		in, out := &in.Advanced, &out.Advanced
		*out = new(kedav1alpha1.AdvancedConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]kedav1alpha1.ScaleTriggers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fallback != nil {
		in, out := &in.Fallback, &out.Fallback
		*out = new(kedav1alpha1.Fallback)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KedaScaleInfo.
func (in *KedaScaleInfo) DeepCopy() *KedaScaleInfo {
	if in == nil {
		return nil
	}
	out := new(KedaScaleInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinearScaling) DeepCopyInto(out *LinearScaling) {
	*out = *in
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinearScaling.
func (in *LinearScaling) DeepCopy() *LinearScaling {
	if in == nil {
		return nil
	}
	out := new(LinearScaling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Mirror) DeepCopyInto(out *Mirror) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mirror.
func (in *Mirror) DeepCopy() *Mirror {
	if in == nil {
		return nil
	}
	out := new(Mirror)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Mirror) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorList) DeepCopyInto(out *MirrorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Mirror, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorList.
func (in *MirrorList) DeepCopy() *MirrorList {
	if in == nil {
		return nil
	}
	out := new(MirrorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MirrorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorSpec) DeepCopyInto(out *MirrorSpec) {
	*out = *in
	if in.AdditionalConfigSelectors != nil {
		in, out := &in.AdditionalConfigSelectors, &out.AdditionalConfigSelectors
		*out = make([]ConfigSelector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorSpec.
func (in *MirrorSpec) DeepCopy() *MirrorSpec {
	if in == nil {
		return nil
	}
	out := new(MirrorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorStatus) DeepCopyInto(out *MirrorStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorStatus.
func (in *MirrorStatus) DeepCopy() *MirrorStatus {
	if in == nil {
		return nil
	}
	out := new(MirrorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortInfo) DeepCopyInto(out *PortInfo) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ingresses != nil {
		in, out := &in.Ingresses, &out.Ingresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Istio.DeepCopyInto(&out.Istio)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortInfo.
func (in *PortInfo) DeepCopy() *PortInfo {
	if in == nil {
		return nil
	}
	out := new(PortInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseInfo) DeepCopyInto(out *ReleaseInfo) {
	*out = *in
	in.GeometricScaling.DeepCopyInto(&out.GeometricScaling)
	in.LinearScaling.DeepCopyInto(&out.LinearScaling)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseInfo.
func (in *ReleaseInfo) DeepCopy() *ReleaseInfo {
	if in == nil {
		return nil
	}
	out := new(ReleaseInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseManager) DeepCopyInto(out *ReleaseManager) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseManager.
func (in *ReleaseManager) DeepCopy() *ReleaseManager {
	if in == nil {
		return nil
	}
	out := new(ReleaseManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReleaseManager) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseManagerList) DeepCopyInto(out *ReleaseManagerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ReleaseManager, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseManagerList.
func (in *ReleaseManagerList) DeepCopy() *ReleaseManagerList {
	if in == nil {
		return nil
	}
	out := new(ReleaseManagerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReleaseManagerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseManagerRevisionMetricsStatus) DeepCopyInto(out *ReleaseManagerRevisionMetricsStatus) {
	*out = *in
	if in.GitCreateSecondsInt != nil {
		in, out := &in.GitCreateSecondsInt, &out.GitCreateSecondsInt
		*out = new(int)
		**out = **in
	}
	if in.GitDeploySecondsInt != nil {
		in, out := &in.GitDeploySecondsInt, &out.GitDeploySecondsInt
		*out = new(int)
		**out = **in
	}
	if in.GitCanarySecondsInt != nil {
		in, out := &in.GitCanarySecondsInt, &out.GitCanarySecondsInt
		*out = new(int)
		**out = **in
	}
	if in.GitPendingReleaseSecondsInt != nil {
		in, out := &in.GitPendingReleaseSecondsInt, &out.GitPendingReleaseSecondsInt
		*out = new(int)
		**out = **in
	}
	if in.GitReleaseSecondsInt != nil {
		in, out := &in.GitReleaseSecondsInt, &out.GitReleaseSecondsInt
		*out = new(int)
		**out = **in
	}
	if in.RevisionDeploySecondsInt != nil {
		in, out := &in.RevisionDeploySecondsInt, &out.RevisionDeploySecondsInt
		*out = new(int)
		**out = **in
	}
	if in.RevisionCanarySecondsInt != nil {
		in, out := &in.RevisionCanarySecondsInt, &out.RevisionCanarySecondsInt
		*out = new(int)
		**out = **in
	}
	if in.RevisionReleaseSecondsInt != nil {
		in, out := &in.RevisionReleaseSecondsInt, &out.RevisionReleaseSecondsInt
		*out = new(int)
		**out = **in
	}
	if in.ReivisonPendingReleaseSecondsInt != nil {
		in, out := &in.ReivisonPendingReleaseSecondsInt, &out.ReivisonPendingReleaseSecondsInt
		*out = new(int)
		**out = **in
	}
	if in.RevisionRollbackSecondsInt != nil {
		in, out := &in.RevisionRollbackSecondsInt, &out.RevisionRollbackSecondsInt
		*out = new(int)
		**out = **in
	}
	if in.DeploySecondsInt != nil {
		in, out := &in.DeploySecondsInt, &out.DeploySecondsInt
		*out = new(int)
		**out = **in
	}
	if in.CanarySecondsInt != nil {
		in, out := &in.CanarySecondsInt, &out.CanarySecondsInt
		*out = new(int)
		**out = **in
	}
	if in.ReleaseSecondsInt != nil {
		in, out := &in.ReleaseSecondsInt, &out.ReleaseSecondsInt
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseManagerRevisionMetricsStatus.
func (in *ReleaseManagerRevisionMetricsStatus) DeepCopy() *ReleaseManagerRevisionMetricsStatus {
	if in == nil {
		return nil
	}
	out := new(ReleaseManagerRevisionMetricsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseManagerRevisionScaleStatus) DeepCopyInto(out *ReleaseManagerRevisionScaleStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseManagerRevisionScaleStatus.
func (in *ReleaseManagerRevisionScaleStatus) DeepCopy() *ReleaseManagerRevisionScaleStatus {
	if in == nil {
		return nil
	}
	out := new(ReleaseManagerRevisionScaleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseManagerRevisionStateStatus) DeepCopyInto(out *ReleaseManagerRevisionStateStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseManagerRevisionStateStatus.
func (in *ReleaseManagerRevisionStateStatus) DeepCopy() *ReleaseManagerRevisionStateStatus {
	if in == nil {
		return nil
	}
	out := new(ReleaseManagerRevisionStateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseManagerRevisionStatus) DeepCopyInto(out *ReleaseManagerRevisionStatus) {
	*out = *in
	in.State.DeepCopyInto(&out.State)
	if in.TriggeredAlarms != nil {
		in, out := &in.TriggeredAlarms, &out.TriggeredAlarms
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.GitTimestamp != nil {
		in, out := &in.GitTimestamp, &out.GitTimestamp
		*out = (*in).DeepCopy()
	}
	if in.RevisionTimestamp != nil {
		in, out := &in.RevisionTimestamp, &out.RevisionTimestamp
		*out = (*in).DeepCopy()
	}
	if in.DeployingStartTimestamp != nil {
		in, out := &in.DeployingStartTimestamp, &out.DeployingStartTimestamp
		*out = (*in).DeepCopy()
	}
	if in.CanaryStartTimestamp != nil {
		in, out := &in.CanaryStartTimestamp, &out.CanaryStartTimestamp
		*out = (*in).DeepCopy()
	}
	if in.PendingReleaseStartTimestamp != nil {
		in, out := &in.PendingReleaseStartTimestamp, &out.PendingReleaseStartTimestamp
		*out = (*in).DeepCopy()
	}
	if in.ReleaseStartTimestamp != nil {
		in, out := &in.ReleaseStartTimestamp, &out.ReleaseStartTimestamp
		*out = (*in).DeepCopy()
	}
	in.Metrics.DeepCopyInto(&out.Metrics)
	out.Scale = in.Scale
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseManagerRevisionStatus.
func (in *ReleaseManagerRevisionStatus) DeepCopy() *ReleaseManagerRevisionStatus {
	if in == nil {
		return nil
	}
	out := new(ReleaseManagerRevisionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseManagerSpec) DeepCopyInto(out *ReleaseManagerSpec) {
	*out = *in
	if in.Variants != nil {
		in, out := &in.Variants, &out.Variants
		*out = make([]Variant, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseManagerSpec.
func (in *ReleaseManagerSpec) DeepCopy() *ReleaseManagerSpec {
	if in == nil {
		return nil
	}
	out := new(ReleaseManagerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseManagerStatus) DeepCopyInto(out *ReleaseManagerStatus) {
	*out = *in
	if in.Revisions != nil {
		in, out := &in.Revisions, &out.Revisions
		*out = make([]ReleaseManagerRevisionStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseManagerStatus.
func (in *ReleaseManagerStatus) DeepCopy() *ReleaseManagerStatus {
	if in == nil {
		return nil
	}
	out := new(ReleaseManagerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Retries) DeepCopyInto(out *Retries) {
	*out = *in
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = new(v1.Duration)
		**out = **in
	}
	if in.RetryOn != nil {
		in, out := &in.RetryOn, &out.RetryOn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Retries.
func (in *Retries) DeepCopy() *Retries {
	if in == nil {
		return nil
	}
	out := new(Retries)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Revision) DeepCopyInto(out *Revision) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Revision.
func (in *Revision) DeepCopy() *Revision {
	if in == nil {
		return nil
	}
	out := new(Revision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Revision) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevisionApp) DeepCopyInto(out *RevisionApp) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevisionApp.
func (in *RevisionApp) DeepCopy() *RevisionApp {
	if in == nil {
		return nil
	}
	out := new(RevisionApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevisionList) DeepCopyInto(out *RevisionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Revision, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevisionList.
func (in *RevisionList) DeepCopy() *RevisionList {
	if in == nil {
		return nil
	}
	out := new(RevisionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RevisionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevisionReleaseStatus) DeepCopyInto(out *RevisionReleaseStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevisionReleaseStatus.
func (in *RevisionReleaseStatus) DeepCopy() *RevisionReleaseStatus {
	if in == nil {
		return nil
	}
	out := new(RevisionReleaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevisionScaleStatus) DeepCopyInto(out *RevisionScaleStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevisionScaleStatus.
func (in *RevisionScaleStatus) DeepCopy() *RevisionScaleStatus {
	if in == nil {
		return nil
	}
	out := new(RevisionScaleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevisionSpec) DeepCopyInto(out *RevisionSpec) {
	*out = *in
	out.App = in.App
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]RevisionTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.Sentry = in.Sentry
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevisionSpec.
func (in *RevisionSpec) DeepCopy() *RevisionSpec {
	if in == nil {
		return nil
	}
	out := new(RevisionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevisionStatus) DeepCopyInto(out *RevisionStatus) {
	*out = *in
	out.Sentry = in.Sentry
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]RevisionTargetStatus, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevisionStatus.
func (in *RevisionStatus) DeepCopy() *RevisionStatus {
	if in == nil {
		return nil
	}
	out := new(RevisionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevisionTarget) DeepCopyInto(out *RevisionTarget) {
	*out = *in
	in.Scale.DeepCopyInto(&out.Scale)
	in.Release.DeepCopyInto(&out.Release)
	if in.ServiceMonitors != nil {
		in, out := &in.ServiceMonitors, &out.ServiceMonitors
		*out = make([]*ServiceMonitor, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ServiceMonitor)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.SlothServiceLevelObjectives != nil {
		in, out := &in.SlothServiceLevelObjectives, &out.SlothServiceLevelObjectives
		*out = make([]*SlothServiceLevelObjective, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SlothServiceLevelObjective)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DatadogSLOs != nil {
		in, out := &in.DatadogSLOs, &out.DatadogSLOs
		*out = make([]*DatadogSLO, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DatadogSLO)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	in.ServiceLevelObjectiveLabels.DeepCopyInto(&out.ServiceLevelObjectiveLabels)
	if in.ConfigSelector != nil {
		in, out := &in.ConfigSelector, &out.ConfigSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	out.AWS = in.AWS
	if in.AlertRules != nil {
		in, out := &in.AlertRules, &out.AlertRules
		*out = make([]monitoringv1.Rule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sidecars != nil {
		in, out := &in.Sidecars, &out.Sidecars
		*out = make([]corev1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]corev1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]corev1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodAnnotations != nil {
		in, out := &in.PodAnnotations, &out.PodAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(corev1.Probe)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(corev1.Probe)
		(*in).DeepCopyInto(*out)
	}
	if in.Lifecycle != nil {
		in, out := &in.Lifecycle, &out.Lifecycle
		*out = new(corev1.Lifecycle)
		(*in).DeepCopyInto(*out)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(corev1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.ExternalTest.DeepCopyInto(&out.ExternalTest)
	out.Canary = in.Canary
	if in.DefaultIngressPorts != nil {
		in, out := &in.DefaultIngressPorts, &out.DefaultIngressPorts
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]PortInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Istio != nil {
		in, out := &in.Istio, &out.Istio
		*out = new(Istio)
		(*in).DeepCopyInto(*out)
	}
	if in.PodDisruptionBudget != nil {
		in, out := &in.PodDisruptionBudget, &out.PodDisruptionBudget
		*out = new(policyv1.PodDisruptionBudget)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevisionTarget.
func (in *RevisionTarget) DeepCopy() *RevisionTarget {
	if in == nil {
		return nil
	}
	out := new(RevisionTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevisionTargetStatus) DeepCopyInto(out *RevisionTargetStatus) {
	*out = *in
	out.Scale = in.Scale
	out.Release = in.Release
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevisionTargetStatus.
func (in *RevisionTargetStatus) DeepCopy() *RevisionTargetStatus {
	if in == nil {
		return nil
	}
	out := new(RevisionTargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLICanaryConfig) DeepCopyInto(out *SLICanaryConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLICanaryConfig.
func (in *SLICanaryConfig) DeepCopy() *SLICanaryConfig {
	if in == nil {
		return nil
	}
	out := new(SLICanaryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInfo) DeepCopyInto(out *ScaleInfo) {
	*out = *in
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(int32)
		**out = **in
	}
	if in.TargetCPUUtilizationPercentage != nil {
		in, out := &in.TargetCPUUtilizationPercentage, &out.TargetCPUUtilizationPercentage
		*out = new(int32)
		**out = **in
	}
	if in.TargetMemoryUtilizationPercentage != nil {
		in, out := &in.TargetMemoryUtilizationPercentage, &out.TargetMemoryUtilizationPercentage
		*out = new(int32)
		**out = **in
	}
	if in.TargetRequestsRate != nil {
		in, out := &in.TargetRequestsRate, &out.TargetRequestsRate
		*out = new(string)
		**out = **in
	}
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = new(WorkerScaleInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.KedaWorker != nil {
		in, out := &in.KedaWorker, &out.KedaWorker
		*out = new(KedaScaleInfo)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInfo.
func (in *ScaleInfo) DeepCopy() *ScaleInfo {
	if in == nil {
		return nil
	}
	out := new(ScaleInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SentryInfo) DeepCopyInto(out *SentryInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SentryInfo.
func (in *SentryInfo) DeepCopy() *SentryInfo {
	if in == nil {
		return nil
	}
	out := new(SentryInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceLevelIndicator) DeepCopyInto(out *ServiceLevelIndicator) {
	*out = *in
	out.Canary = in.Canary
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceLevelIndicator.
func (in *ServiceLevelIndicator) DeepCopy() *ServiceLevelIndicator {
	if in == nil {
		return nil
	}
	out := new(ServiceLevelIndicator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceLevelObjectiveLabels) DeepCopyInto(out *ServiceLevelObjectiveLabels) {
	*out = *in
	if in.AlertLabels != nil {
		in, out := &in.AlertLabels, &out.AlertLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuleLabels != nil {
		in, out := &in.RuleLabels, &out.RuleLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ServiceLevelLabels != nil {
		in, out := &in.ServiceLevelLabels, &out.ServiceLevelLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceLevelObjectiveLabels.
func (in *ServiceLevelObjectiveLabels) DeepCopy() *ServiceLevelObjectiveLabels {
	if in == nil {
		return nil
	}
	out := new(ServiceLevelObjectiveLabels)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceMonitor) DeepCopyInto(out *ServiceMonitor) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceMonitor.
func (in *ServiceMonitor) DeepCopy() *ServiceMonitor {
	if in == nil {
		return nil
	}
	out := new(ServiceMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlothServiceLevelObjective) DeepCopyInto(out *SlothServiceLevelObjective) {
	*out = *in
	out.ServiceLevelIndicator = in.ServiceLevelIndicator
	in.ServiceLevelObjectiveLabels.DeepCopyInto(&out.ServiceLevelObjectiveLabels)
	in.Alerting.DeepCopyInto(&out.Alerting)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlothServiceLevelObjective.
func (in *SlothServiceLevelObjective) DeepCopy() *SlothServiceLevelObjective {
	if in == nil {
		return nil
	}
	out := new(SlothServiceLevelObjective)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Variant) DeepCopyInto(out *Variant) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Variant.
func (in *Variant) DeepCopy() *Variant {
	if in == nil {
		return nil
	}
	out := new(Variant)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerScaleInfo) DeepCopyInto(out *WorkerScaleInfo) {
	*out = *in
	if in.TargetMessagesPerWorker != nil {
		in, out := &in.TargetMessagesPerWorker, &out.TargetMessagesPerWorker
		*out = new(int32)
		**out = **in
	}
	if in.SecondsToProcessOneJobString != nil {
		in, out := &in.SecondsToProcessOneJobString, &out.SecondsToProcessOneJobString
		*out = new(string)
		**out = **in
	}
	if in.MaxDisruption != nil {
		in, out := &in.MaxDisruption, &out.MaxDisruption
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerScaleInfo.
func (in *WorkerScaleInfo) DeepCopy() *WorkerScaleInfo {
	if in == nil {
		return nil
	}
	out := new(WorkerScaleInfo)
	in.DeepCopyInto(out)
	return out
}
